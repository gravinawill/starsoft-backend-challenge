version: '3.9'

services:
  postgres:
    container_name: niki-postgres
    image: 'bitnami/postgresql:latest' # TODO: change to the latest version to avoid security issues
    volumes:
      - './.docker/pg_data:/bitnami/postgresql'
    environment:
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_DATABASE: ${POSTGRES_DB}
      POSTGRESQL_TIMEZONE: America/SAO_PAULO # TODO: change to the timezone of the project
    ports:
      - '${POSTGRES_PORT}:5432'
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    networks:
      - app-network
  zookeeper:
    container_name: niki-zookeeper
    image: 'bitnami/zookeeper:3.8'
    volumes:
      - './.docker/zookeeper_data:/bitnami/zookeeper'
    ports:
      - '${ZOOKEEPER_PORT:-2181}:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [CMD-SHELL, 'echo ruok | nc -w 2 localhost 2181 | grep imok']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network
  kafka:
    container_name: niki-kafka
    image: 'bitnami/kafka:3.6'
    volumes:
      - './.docker/kafka_data:/bitnami/kafka'
    ports:
      - '${KAFKA_PORT:-9092}:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:${KAFKA_PORT:-9092},PLAINTEXT_INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    healthcheck:
      test: [CMD-SHELL, 'kafka-topics.sh --bootstrap-server localhost:9092 --list | cat']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - app-network
  kafka-ui:
    container_name: niki-kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '${KAFKA_UI_PORT:-8080}:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_READONLY=false
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
