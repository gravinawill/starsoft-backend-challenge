generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
  output     = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("ORDERS_SERVER_DATABASE_URL")
}

model Customer {
  id        String    @id @unique @map("id") @db.Uuid()
  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  @@index([id])
  @@map("customers")
}

model Product {
  id        String    @id @unique @map("id") @db.Uuid()
  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  orderProducts OrderProduct[] @relation(name: "OrderProductProduct", map: "order_product_product")

  @@index([id])
  @@map("products")
}

enum OrderStatus {
  CREATED
  INVENTORY_PRODUCTS_MISSING
  INVENTORY_CONFIRMED
  AWAITING_PAYMENT
  PAYMENT_SUCCEEDED
  PAYMENT_FAILED
  SHIPMENT_CREATED
  DELIVERY_FAILED
  DELIVERY_COMPLETED
}

enum PaymentMethod {
  PIX
}

model Order {
  status             OrderStatus   @map("status")
  paymentMethod      PaymentMethod @map("payment_method")
  totalAmountInCents Int?          @map("total_amount_in_cents") @db.Integer()

  id        String    @id @unique @map("id") @db.Uuid()
  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  orderProducts OrderProduct[] @relation(name: "OrderProductOrder", map: "order_product_order")

  @@index([id])
  @@map("orders")
}

model OrderProduct {
  quantity Int @map("quantity") @db.Integer()

  product   Product @relation(fields: [productID], references: [id], onDelete: Cascade, onUpdate: Cascade, name: "OrderProductProduct", map: "order_product_product")
  productID String  @db.Uuid()

  order   Order  @relation(fields: [orderID], references: [id], onDelete: Cascade, onUpdate: Cascade, name: "OrderProductOrder", map: "order_product_order")
  orderID String @db.Uuid()

  id        String    @id @unique @map("id") @db.Uuid()
  createdAt DateTime  @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  @@index([id])
  @@map("order_products")
}
